name: 🎬 Update Live Channels Daily

on:
  schedule:
    # Run daily at 2:00 AM UTC (optimal for global coverage)
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering
    inputs:
      force_update:
        description: 'Force update even if no changes'
        required: false
        default: 'false'
        type: boolean

permissions:
  contents: write # Need write permission to commit updated JSON

jobs:
  update-live-channels:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          # Install only what we need for the script in scripts directory
          cd scripts
          npm install --no-audit --legacy-peer-deps
          cd ..

      - name: 🔑 Verify YouTube API Key
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: |
          if [ -z "$YOUTUBE_API_KEY" ]; then
            echo "❌ ERROR: YOUTUBE_API_KEY secret not configured!"
            echo "Please add your YouTube Data API v3 key to repository secrets:"
            echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "2. Click 'New repository secret'"
            echo "3. Name: YOUTUBE_API_KEY"
            echo "4. Value: Your YouTube API key"
            exit 1
          else
            echo "✅ YouTube API key found (${#YOUTUBE_API_KEY} characters)"
            echo "🌐 Running from GitHub Actions environment"
            echo "📍 If you get 403 errors, check API key restrictions:"
            echo "   - Allow *.github.com/* and github.com/* domains"
            echo "   - Or temporarily set 'Application restrictions' to 'None'"
          fi

      - name: 🎬 Update live channels data
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: |
          echo "🚀 Starting live channels update..."
          echo "📅 $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          
          # Run the update script
          node scripts/update_popular_live.js
          
          echo "✅ Live channels update completed"

      - name: 📊 Check for changes
        id: changes
        run: |
          if git diff --quiet public/popular_live.json; then
            echo "📄 No changes detected in popular_live.json"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "📈 Changes detected in popular_live.json"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            
            # Show summary of changes
            echo "📋 Changes summary:"
            git diff --stat public/popular_live.json
            
            # Show channel counts
            echo "📺 Updated channel counts:"
            node -e "
              const data = JSON.parse(require('fs').readFileSync('public/popular_live.json', 'utf8'));
              Object.entries(data).forEach(([region, channels]) => {
                if (region !== 'lastUpdated' && Array.isArray(channels)) {
                  console.log(\`  \${region}: \${channels.length} channels\`);
                }
              });
            "
          fi

      - name: 🏷️ Get current timestamp
        id: timestamp
        run: echo "timestamp=$(date -u '+%Y-%m-%d %H:%M UTC')" >> $GITHUB_OUTPUT

      - name: 💾 Commit and push changes
        if: steps.changes.outputs.has_changes == 'true' || github.event.inputs.force_update == 'true'
        run: |
          # Configure git with bot identity
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Add and commit the updated JSON
          git add public/popular_live.json
          git commit -m "🎬 Auto-update live channels (${{ steps.timestamp.outputs.timestamp }})"
          
          # Push changes
          git push
          
          echo "✅ Live channels data committed and pushed successfully"

      - name: 📈 Generate summary report
        if: always()
        run: |
          echo "## 🎬 Live Channels Update Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| **Update Time** | ${{ steps.timestamp.outputs.timestamp }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **Changes Detected** | ${{ steps.changes.outputs.has_changes }} |" >> $GITHUB_STEP_SUMMARY
          echo "| **API Key Status** | ✅ Valid |" >> $GITHUB_STEP_SUMMARY
          echo "| **Workflow** | ${{ github.workflow }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "public/popular_live.json" ]; then
            echo "### 📺 Regional Channel Coverage" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            node -e "
              try {
                const data = JSON.parse(require('fs').readFileSync('public/popular_live.json', 'utf8'));
                let total = 0;
                Object.entries(data).forEach(([region, channels]) => {
                  if (region !== 'lastUpdated' && Array.isArray(channels)) {
                    console.log(\`\${region.padEnd(8)}: \${channels.length.toString().padStart(2)} channels\`);
                    total += channels.length;
                  }
                });
                console.log(\`\${''.padEnd(8, '-')}: \${''.padEnd(2, '-')} --------\`);
                console.log(\`Total   : \${total.toString().padStart(2)} channels\`);
              } catch (e) {
                console.log('Error reading channel data');
              }
            " >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.changes.outputs.has_changes }}" == "true" ]; then
            echo "### ✅ Action Taken" >> $GITHUB_STEP_SUMMARY
            echo "- Updated \`public/popular_live.json\` with fresh live streams" >> $GITHUB_STEP_SUMMARY
            echo "- Committed changes to repository" >> $GITHUB_STEP_SUMMARY
            echo "- Changes will be available on next deployment" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ℹ️ Action Taken" >> $GITHUB_STEP_SUMMARY
            echo "- No updates were needed" >> $GITHUB_STEP_SUMMARY
            echo "- Existing live channels data is still current" >> $GITHUB_STEP_SUMMARY
          fi